{% block cms_element_form_input %}
    {% if feature('ACCESSIBILITY_TWEAKS') %}

        {% set validationRules = [] %}

        {% if required %}
            {% set validationRules = validationRules|merge(['required']) %}
        {% endif %}

        {% if type === 'email' %}
            {% set validationRules = validationRules|merge(['email']) %}
        {% endif %}

        {% sw_include '@Storefront/storefront/component/form/form-input.html.twig' with {
            type: type,
            label: label|trans,
            id: formPrefix ~ '-form-' ~ fieldName,
            name: fieldName,
            value: data.get( fieldName ),
            placeholder: placeholder|trans,
            autocomplete: autocomplete,
            violationPath: '/' ~ fieldName,
            validationRules: (validationRules is not empty) ? validationRules|join(','),
            additionalClass: additionalClass,
        } %}

    {% else %}

    <div class="form-group {{ additionalClass }}">

        {# @deprecated tag:v6.7.0 - Block will be removed. Form field is replaced by a central component `component/form/form-input.html.twig`. #}
        {% block cms_element_form_input_label %}
            <label class="form-label" for="form-{{ fieldName }}">
                {{- label|trans -}}{% if required %} {{- 'general.required'|trans -}}{% endif %}
            </label>
        {% endblock %}

        {# @deprecated tag:v6.7.0 - Block will be removed. Form field is replaced by a central component `component/form/form-input.html.twig`. #}
        {% block cms_element_form_input_input %}
            <input name="{{ fieldName }}"
                   type="{{ type ?? 'text'}}"
                   id="form-{{ fieldName }}"
                   {% if autocomplete %}autocomplete="{{ autocomplete }}"{% endif %}
                   value="{{ data.get( fieldName ) }}"
                   placeholder="{{ placeholder|trans }}"
                   {% if required %}required="required"{% endif %}
                   class="form-control{% if formViolations.getViolations( '/' ~ fieldName ) is not empty %} is-invalid{% endif %}">

            {% if formViolations.getViolations( '/' ~ fieldName ) is not empty %}
                {% sw_include '@Storefront/storefront/utilities/form-violation.html.twig' with {
                    violationPath: ('/' ~ fieldName)
                } %}
            {% endif %}
        {% endblock %}
    </div>
    {% endif %}
{% endblock %}
