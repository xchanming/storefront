{% block component_account_personal %}
    {% block component_account_personal_account_type %}
        {% if (onlyCompanyRegistration or (config('core.loginRegistration.showAccountTypeSelection') and not hideCustomerTypeSelect)) and not hasSelectedBusiness %}
            <div class="row g-2">
                {% set toggleTarget = ".js-field-toggle-contact-type-company" %}

                {% if customToggleTarget %}
                    {% set toggleTarget = "#{toggleTarget}-#{prefix}" %}
                {% endif %}

                {% set isCompany = false %}

                {% if page.address.company or data.company is not empty %}
                    {% set isCompany = true %}
                {% endif %}

                {% if onlyCompanyRegistration or (accountType and accountType == constant('Cicada\\Core\\Checkout\\Customer\\CustomerEntity::ACCOUNT_TYPE_BUSINESS')) %}
                    {% set isCompany = true %}
                {% endif %}

                {% set privateType = constant('Cicada\\Core\\Checkout\\Customer\\CustomerEntity::ACCOUNT_TYPE_PRIVATE') %}
                {% set businessType = constant('Cicada\\Core\\Checkout\\Customer\\CustomerEntity::ACCOUNT_TYPE_BUSINESS') %}

                {% set accountTypeOptions %}

                    {% if not onlyCompanyRegistration %}
                        <option value="{{ privateType }}"
                            {% if accountType === privateType || (isCompany == false) %} selected="selected"{% endif %}>
                            {{ "account.personalTypePrivate"|trans|sw_sanitize }}
                        </option>
                    {% endif %}

                    <option value="{{ businessType }}"
                        {% if accountType === businessType || (isCompany == true) %} selected="selected"{% endif %}>
                        {{ "account.personalTypeBusiness"|trans|sw_sanitize }}
                    </option>
                {% endset %}

                {% sw_include '@Storefront/storefront/component/form/form-select.html.twig' with {
                    label: 'account.personalTypeLabel'|trans|sw_sanitize,
                    id: idPrefix ~ prefix ~ '-accountType',
                    name: prefix ? prefix ~ '[accountType]' : 'accountType',
                    options: accountTypeOptions,
                    validationRules: 'required',
                    disabled: (onlyCompanyRegistration) ? 'true',
                    additionalClass: 'col-md-6 contact-type',
                    additionalSelectClass: 'contact-select',
                    attributes: {
                        'data-form-field-toggle': 'true',
                        'data-form-field-toggle-target': toggleTarget,
                        'data-form-field-toggle-value': constant('Cicada\\Core\\Checkout\\Customer\\CustomerEntity::ACCOUNT_TYPE_BUSINESS'),
                        'data-form-field-toggle-scope': (scope == 'parent') ? 'parent' : 'all',
                        'data-form-field-toggle-parent-selector': (scope == 'parent') ? parentSelector,
                    },
                } %}

                {% if onlyCompanyRegistration %}
                    {# This is rendered on the profile edit page if the customer registered via a custom commercial registration form. #}
                    {# The selection field is then disabled and the account type is set to "business". #}
                    <input type="hidden"
                           name="accountType"
                           value="{{ constant('Cicada\\Core\\Checkout\\Customer\\CustomerEntity::ACCOUNT_TYPE_BUSINESS') }}">
                {% endif %}
            </div>
        {% elseif not hideCustomerTypeSelect %}
            <input type="hidden" name="accountType">
        {% endif %}
    {% endblock %}
    {% block component_account_personal_company %}
        {% if (onlyCompanyRegistration or config('core.loginRegistration.showAccountTypeSelection')) and activeRoute == 'frontend.account.profile.page' %}
            <div class="js-field-toggle-contact-type-company{% if customToggleTarget %}-{{ prefix }}{% endif %}">
                {% block component_account_personal_company_fields %}
                    <div class="row g-2">
                        {% block component_account_personal_company_name %}
                            {% if formViolations.getViolations("/company") is not empty %}
                                {% set violationPath = "/company" %}
                            {% else %}
                                {% set requiredMessage = "error.VIOLATION::IS_BLANK_ERROR"|trans({ '%field%': "address.companyNameLabel"|trans|sw_sanitize }) %}
                            {% endif %}
                            {% sw_include '@Storefront/storefront/component/form/form-input.html.twig' with {
                                label: 'address.companyNameLabel'|trans|sw_sanitize,
                                id: idPrefix ~ prefix ~ '-company',
                                name: 'company',
                                value: data.get('company'),
                                autocomplete: 'section-personal organization',
                                violationPath: violationPath,
                                validationRules: 'required',
                                additionalClass: 'col-sm-6',
                            } %}
                        {% endblock %}
                    </div>
                {% endblock %}
            </div>
        {% endif %}
    {% endblock %}
    {% block component_account_personal_vat_id %}
        {% if showVatIdField %}
            {% if config('core.loginRegistration.showAccountTypeSelection') or onlyCompanyRegistration %}
                <div
                    class="js-field-toggle-contact-type-company{% if customToggleTarget %}-{{ prefix }}{% endif %} js-field-toggle-contact-type-vat-id">
                    {% block component_account_personal_vat_id_fields %}
                        <div class="row g-2">
                            {% sw_include '@Storefront/storefront/component/address/address-personal-vat-id.html.twig' with {
                                'vatIds': data.get('vatIds'),
                                'editMode': true
                            } %}
                        </div>
                    {% endblock %}
                </div>
            {% endif %}
        {% endif %}
    {% endblock %}

    {% block component_account_personal_fields_title %}
        {% if formViolations.getViolations("/#{prefix}/title") is not empty %}
            {% set violationPath = "/#{prefix}/title" %}
        {% elseif formViolations.getViolations("/title") is not empty %}
            {% set violationPath = "/title" %}
        {% endif %}

        {% sw_include '@Storefront/storefront/component/form/form-input.html.twig' with {
            label: 'account.personalTitleLabel'|trans|sw_sanitize,
            id: idPrefix ~ prefix ~ 'personalTitle',
            name: prefix ? prefix ~ '[title]' : 'title',
            value: data.get('title'),
            autocomplete: 'section-personal title',
            violationPath: violationPath,
            validationRules: 'required',
            additionalClass: 'col-md-3 col-sm-6',
        } %}
    {% endblock %}

    {% block component_account_personal_fields_name %}
        <div class="row g-2">
            {% if formViolations.getViolations("/#{prefix}/name") is not empty %}
                {% set violationPath = "/#{prefix}/name" %}
            {% elseif formViolations.getViolations("/name") is not empty and not prefix %}
                {% set violationPath = "/name" %}
            {% else %}
                {% set requiredMessage = "error.VIOLATION::IS_BLANK_ERROR"|trans({ '%field%': "account.personalNameLabel"|trans|sw_sanitize }) %}
            {% endif %}
            {% sw_include '@Storefront/storefront/component/form/form-input.html.twig' with {
                label: 'account.personalNameLabel'|trans|sw_sanitize,
                id: idPrefix ~ prefix ~ '-personalName',
                name: prefix ? prefix ~ '[name]' : 'name',
                value: (prefix and data.has(prefix)) ? data.get(prefix).get('name') : data.get('name'),
                autocomplete: 'section-personal given-name',
                violationPath: violationPath,
                validationRules: '',
                additionalClass: 'col-sm-6',
            } %}
        </div>
    {% endblock %}


    {% block component_account_personal_fields_birthday %}
        {% sw_include '@Storefront/storefront/component/form/form-select-birthday.html.twig' with {
            label: 'account.personalBirthdayLabel'|trans|sw_sanitize,
            validationRules: config('core.loginRegistration.birthdayFieldRequired') ? 'required' : '',
            additionalClass: 'col-sm-6',
        } %}
    {% endblock %}
{% endblock %}
