"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[90573],{573:(e,t,s)=>{s.r(t),s.d(t,{default:()=>r});var i=s(4335),n=s(9068);class r extends i.A{static #e=this.options={hiddenClass:"d-none",hiddenSubmitSelector:".submit--hidden",formContentSelector:".form-content",cmsBlock:".cms-block",contentType:"application/x-www-form-urlencoded"};init(){this._client=new n.A,this._getHiddenSubmit(),this._registerEvents(),this._getCmsBlock(),this._getConfirmationText()}sendAjaxFormSubmit(){let{_client:e,el:t,options:s}=this,i=new FormData(t);e.post(t.action,i,this._handleResponse.bind(this),s.contentType)}_registerEvents(){this.el.addEventListener("submit",this._handleSubmit.bind(this))}_getConfirmationText(){let e=this.el.querySelector('input[name="confirmationText"]');e&&(this._confirmationText=e.value)}_getCmsBlock(){this._block=this.el.closest(this.options.cmsBlock)}_getHiddenSubmit(){this._hiddenSubmit=this.el.querySelector(this.options.hiddenSubmitSelector)}_handleSubmit(e){e.preventDefault(),this.el.checkValidity()?this._submitForm():this._showValidation()}_showValidation(){this._hiddenSubmit.click()}_submitForm(){this.$emitter.publish("beforeSubmit"),this.sendAjaxFormSubmit()}_handleResponse(e){let t=JSON.parse(e);if(this.$emitter.publish("onFormResponse",e),t.length>0){let e=!0,s="";for(let i=0;i<t.length;i+=1)("danger"===t[i].type||"info"===t[i].type)&&(e=!1),s+=t[i].alert;e&&this.el.reset(),this._createResponse(e,s)}else window.location.reload()}_createResponse(e,t){if(e)this._confirmationText&&(t=this._confirmationText),this._block.innerHTML=`<div class="confirm-message">${t}</div>`;else{let e=this._block.querySelector(".confirm-alert");e&&e.remove();let s=`<div class="confirm-alert">${t}</div>`;this._block.insertAdjacentHTML("beforeend",s)}this._block.scrollIntoView({behavior:"smooth",block:"end"})}}},9068:(e,t,s)=>{s.d(t,{A:()=>i});class i{constructor(){this._request=null,this._errorHandlingInternal=!1}get(e,t){let s=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"application/json",i=this._createPreparedRequest("GET",e,s);return this._sendRequest(i,null,t)}post(e,t,s){let i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"application/json";i=this._getContentType(t,i);let n=this._createPreparedRequest("POST",e,i);return this._sendRequest(n,t,s)}delete(e,t,s){let i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"application/json";i=this._getContentType(t,i);let n=this._createPreparedRequest("DELETE",e,i);return this._sendRequest(n,t,s)}patch(e,t,s){let i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"application/json";i=this._getContentType(t,i);let n=this._createPreparedRequest("PATCH",e,i);return this._sendRequest(n,t,s)}abort(){if(this._request)return this._request.abort()}setErrorHandlingInternal(e){this._errorHandlingInternal=e}_registerOnLoaded(e,t){t&&(!0===this._errorHandlingInternal?(e.addEventListener("load",()=>{t(e.responseText,e)}),e.addEventListener("abort",()=>{console.warn(`the request to ${e.responseURL} was aborted`)}),e.addEventListener("error",()=>{console.warn(`the request to ${e.responseURL} failed with status ${e.status}`)}),e.addEventListener("timeout",()=>{console.warn(`the request to ${e.responseURL} timed out`)})):e.addEventListener("loadend",()=>{t(e.responseText,e)}))}_sendRequest(e,t,s){return this._registerOnLoaded(e,s),e.send(t),e}_getContentType(e,t){return e instanceof FormData&&(t=!1),t}_createPreparedRequest(e,t,s){return this._request=new XMLHttpRequest,this._request.open(e,t),this._request.setRequestHeader("X-Requested-With","XMLHttpRequest"),s&&this._request.setRequestHeader("Content-type",s),this._request}}}}]);