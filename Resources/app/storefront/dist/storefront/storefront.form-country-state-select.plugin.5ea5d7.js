"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[86300],{6300:(t,e,i)=>{i.r(e),i.d(e,{default:()=>l});var n=i(9568),r=i(4049),s=i(3107);class l extends n.Z{init(){this.initClient(),this.initSelects(),this._getFormFieldToggleInstance(),this._country={},this._formFieldToggleInstance&&this._formFieldToggleInstance.$emitter.subscribe("onChange",this._onFormFieldToggleChange.bind(this))}initClient(){this._client=new s.Z}initSelects(){this.scopeElement=this.el,this.options.scopeElementSelector&&(this.scopeElement=r.Z.querySelector(document,this.options.scopeElementSelector));let{countrySelectSelector:t,countryStateSelectSelector:e,countryStateCitySelectSelector:i,countryStateCityDistrictSelectSelector:n,initialCountryAttribute:s,initialCountryStateAttribute:o,initialCityAttribute:a,initialDistrictAttribute:d}=l.options,u=[{selector:t,initialAttribute:s,changeHandler:this.onChangeCountry.bind(this)},{selector:e,initialAttribute:o,changeHandler:this.onChangeCountryState.bind(this)},{selector:i,initialAttribute:a,changeHandler:this.onChangeCountryStateCity.bind(this)},{selector:n,initialAttribute:d}];this.selectElements={},u.forEach(t=>{let{selector:e,initialAttribute:i,changeHandler:n}=t,s=r.Z.querySelector(this.scopeElement,e);this.selectElements[e]={element:s,initialValue:r.Z.getDataAttribute(s,i,!1)},n&&s.addEventListener("change",n)});let{initialValue:c}=this.selectElements[t],{initialValue:h}=this.selectElements[e],{initialValue:p}=this.selectElements[i],{initialValue:g}=this.selectElements[n];if(!c)return;this._countryId=c,this._stateId=h,this._cityId=p,this._districtId=g;let y=r.Z.querySelector(this.scopeElement,t),m=y.options[y.selectedIndex];this.requestStateData(c,h,p,g);let _=!!r.Z.getDataAttribute(m,this.options.vatIdRequired,!1),q=document.querySelector(this.options.vatIdFieldInput),S=r.Z.querySelectorAll(this.scopeElement,this.options.zipcodeFieldInput,!1),C=!!r.Z.getDataAttribute(m,this.options.zipcodeRequired,!1);C&&this._updateZipcodeFields(S,C),q&&this._updateVatIdField(q,_)}onChangeCountryState(t){this._stateId=t.target.value;let{countryStateCitySelectSelector:e,countryStateCityPlaceholderSelector:i}=l.options;o(Object.values(this._country[this._countryId][this._stateId].children),null,this.el,e,i),this.onChangeCountryStateCity({target:{value:null}})}onChangeCountryStateCity(t){var e;let i=t.target.value,{countryStateCityDistrictSelectSelector:n,countryStateCityDistrictPlaceholderSelector:r}=l.options;o(i?Object.values(((e=this._country[this._countryId][this._stateId].children[i])===null||void 0===e?void 0:e.children)||[]):[],null,this.el,n,r)}onChangeCountry(t){let e=t.target.value;this._countryId=e;let i=t.target.options[t.target.selectedIndex];this.requestStateData(e,null);let n=r.Z.getDataAttribute(i,this.options.vatIdRequired),s=document.querySelector(this.options.vatIdFieldInput),l=r.Z.querySelectorAll(this.scopeElement,this.options.zipcodeFieldInput,!1),o=!!r.Z.getDataAttribute(i,this.options.zipcodeRequired,!1);this._updateZipcodeFields(l,o),s&&this._updateVatIdField(s,n)}requestStateData(t,e,i,n){let r=JSON.stringify({countryId:t});this._client.post(window.router["frontend.country.country-data"],r,r=>{let s=JSON.parse(r);this._country[t]=s.states.reduce((t,e)=>{var i;return t[e.id]={id:e.id,name:e.name,translated:e.translated,children:{}},(i=e.children)===null||void 0===i||i.forEach(i=>{var n;let r={id:i.id,name:i.name,translated:i.translated,children:{}};t[e.id].children[i.id]=r,(n=i.children)===null||void 0===n||n.forEach(t=>{r.children[t.id]={id:t.id,name:t.name,translated:t.translated}})}),t},{});let{countryStateSelectSelector:a,countryStatePlaceholderSelector:d,countryStateCitySelectSelector:u,countryStateCityDistrictSelectSelector:c}=l.options;o(Object.values(this._country[t]),e,this.el,a,d),e&&(this.selectElements[a].element.value=e,this.onChangeCountryState({target:{value:e}})),i&&(this.selectElements[u].element.value=i,this.onChangeCountryStateCity({target:{value:i}})),n&&(this.selectElements[c].element.value=n)})}_updateVatIdField(t,e){this._differentShippingCheckbox&&"billingAddress"===this.options.prefix||(e?window.formValidation.setFieldRequired(t):window.formValidation.setFieldNotRequired(t))}_updateZipcodeFields(t){let e=arguments.length>1&&void 0!==arguments[1]&&arguments[1];t&&t.forEach(t=>{!0===e?window.formValidation.setFieldRequired(t):window.formValidation.setFieldNotRequired(t)})}_getFormFieldToggleInstance(){let t=r.Z.querySelector(document,'[data-form-field-toggle-target=".js-form-field-toggle-shipping-address"]',!1);t&&(this._formFieldToggleInstance=window.PluginManager.getPluginInstanceFromElement(t,"FormFieldToggle"))}_onFormFieldToggleChange(t){this._differentShippingCheckbox=t.target.checked;let e=this._differentShippingCheckbox?".register-shipping":".register-billing",i=r.Z.querySelector(document,e),n=r.Z.querySelector(i,this.options.countrySelectSelector),s=n.options[n.selectedIndex],l=!!r.Z.getDataAttribute(s,this.options.vatIdRequired,!1),o=document.querySelector(this.options.vatIdFieldInput);o&&this._updateVatIdField(o,l)}}function o(t,e,i,n,s){let l=r.Z.querySelector(i,n);(function(t,e){t.querySelectorAll(e).forEach(t=>t.remove())})(l,"option:not(".concat(s,")")),function(t,e,i){if(null!==t){if(0===e.length){t.setAttribute("disabled","disabled");return}e.map(t=>(function(t,e){let i=document.createElement("option");return i.setAttribute("value",t.id),i.innerText=t.translated.name,t.id===e&&i.setAttribute("selected","selected"),i})(t,i)).forEach(e=>{t.append(e)}),t.removeAttribute("disabled")}}(l,t,e),function(t,e){let i=t.querySelector(e);if(!i)return;let n=t.parentNode.querySelector("label");(null==n?void 0:n.textContent)&&"*"===n.textContent.substr(-1,1)&&(n.textContent=n.textContent.substr(0,n.textContent.length-1)),i.removeAttribute("disabled"),t.removeAttribute("required")}(l,"option".concat(s))}l.options={countrySelectSelector:".country-select",countryStateSelectSelector:".country-state-select",countryStateCitySelectSelector:".country-state-city-select",countryStateCityDistrictSelectSelector:".country-state-city-district-select",initialCountryAttribute:"initial-country-id",initialCountryStateAttribute:"initial-country-state-id",initialCityAttribute:"initial-city-id",initialDistrictAttribute:"initial-district-id",countryStatePlaceholderSelector:'[data-placeholder-option="true"]',countryStateCityPlaceholderSelector:"[data-city-placeholder-option]",countryStateCityDistrictPlaceholderSelector:"[data-district-placeholder-option]",vatIdFieldInput:"#vatIds",zipcodeFieldInput:'[data-input-name="zipcodeInput"]',vatIdRequired:"vat-id-required",zipcodeRequired:"zipcode-required",zipcodeLabel:"#zipcodeLabel",scopeElementSelector:null,prefix:null}},3107:(t,e,i)=>{i.d(e,{Z:()=>n});class n{get(t,e){let i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"application/json",n=this._createPreparedRequest("GET",t,i);return this._sendRequest(n,null,e)}post(t,e,i){let n=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"application/json";n=this._getContentType(e,n);let r=this._createPreparedRequest("POST",t,n);return this._sendRequest(r,e,i)}delete(t,e,i){let n=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"application/json";n=this._getContentType(e,n);let r=this._createPreparedRequest("DELETE",t,n);return this._sendRequest(r,e,i)}patch(t,e,i){let n=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"application/json";n=this._getContentType(e,n);let r=this._createPreparedRequest("PATCH",t,n);return this._sendRequest(r,e,i)}abort(){if(this._request)return this._request.abort()}setErrorHandlingInternal(t){this._errorHandlingInternal=t}_registerOnLoaded(t,e){e&&(!0===this._errorHandlingInternal?(t.addEventListener("load",()=>{e(t.responseText,t)}),t.addEventListener("abort",()=>{console.warn("the request to ".concat(t.responseURL," was aborted"))}),t.addEventListener("error",()=>{console.warn("the request to ".concat(t.responseURL," failed with status ").concat(t.status))}),t.addEventListener("timeout",()=>{console.warn("the request to ".concat(t.responseURL," timed out"))})):t.addEventListener("loadend",()=>{e(t.responseText,t)}))}_sendRequest(t,e,i){return this._registerOnLoaded(t,i),t.send(e),t}_getContentType(t,e){return t instanceof FormData&&(e=!1),e}_createPreparedRequest(t,e,i){return this._request=new XMLHttpRequest,this._request.open(t,e),this._request.setRequestHeader("X-Requested-With","XMLHttpRequest"),i&&this._request.setRequestHeader("Content-type",i),this._request}constructor(){this._request=null,this._errorHandlingInternal=!1}}}}]);